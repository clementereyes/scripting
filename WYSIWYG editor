<!DOCTYPE html>
<html lang="en">
<!--
                               ɍ͍͍͍͍͍͍͍ͻ
                               º        Disclaimer       º
                               ȍ͍͍͍͍͍͍͍ͼ
   ɍ͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍»
   º                                                                                  º
   º The authors of the script, cannot be held responsible for the use or misuse,     º
   º directly or indirectly, of the content offered. The script offered is            º
   º work-in-progress, and should be considered as such. There is no guarantee        º
   º the script will work as expected, desired or even described.  Any document       º
   º or sourcecode that links to this disclaimer, presenting it as such, is           º
   º covered by these clauses.                                                        º
   º THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.    º
   º SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY         º
   º SERVICING, REPAIR OR CORRECTION.                                                 º
   ɍ͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍͍»
-------------------------------------------------------------
Title:			Rich TExt Editor
Developer:		Clemente Reyes ()
WebSite:		http://www.geocities.ws/clementereyes/
Last Update:	2025-05-03
Summary:		A simple Rich Text Editor for Copy and Paste 
Printer Setup for IE: 
	Header Title Center: Production Passdown-&w&d
	Footer EID Left: Employee #: 10001488
-------------------------------------------------------------
::: -- Version History ?-
:::(Major version).(Minor version).(Revision number).(Build number) 
:::          XX.XXX         YYYYMMDD Author Description
|  version= 1.0.00-beta" &:20250417 C.Reyes   initial version providing framework
|  version= 1.0.1"       &:20250419 C.Reyes   working build with minimum text no saving option: Editor_revA.htm 
|  version= 1.0.2"       &:20250419 C.Reyes   working build with revision and saving option: Editor_revE.htm 
|  version= 1.0.3"       &:20250423 C.Reyes   Added print option: Editor_revF.htm
|  version= 1.0.4"       &:20250423 C.Reyes   Added highlight option: Editor_revH.htm
|  version= 1.0.6"       &:20250423 C.Reyes   Added date to filename: Editor_revM.htm
|  version= 1.0.7"       &:20250423 C.Reyes   removed highlight option: Editor_revM.htm
|  version= 1.0.8"       &:20250424 C.Reyes   Added timestamp: Editor_revP.htm
|  version= 1.0.9"       &:20250424 C.Reyes   Refactoring: Editor_revR.htm
|  version= 1.0.11"      &:20250424 C.Reyes   Added additional text for jobs: Editor_revW.htm
|  version= 1.0.12"      &:20250425 C.Reyes   Refactoring: Editor_revW.htm
|  version= 1.0.13"      &:20250425 C.Reyes   syntax clean-up: Editor_revW.htm
|  version= 1.0.18"      &:20250425 C.Reyes   Timestamp process for saving filename: Editor_revAA.htm
|  version= 1.0.18"      &:20250425 C.Reyes   Added Leading zero for datetime: Editor_revAB.htm
|  version= 1.0.19"      &:20250428 C.Reyes   Added Multi-bullet option: Editor_revAB.htm
|  version= 1.0.20"      &:20250429 C.Reyes   Added highlight option: Editor_revAD.htm
|  version= 1.0.21"      &:20250429 C.Reyes   updated using mouseup highlight option: Editor_revAF.htm
|  version= 1.0.22"      &:20250503 C.Reyes   updated mouseclick un/highlight: Editor_revAG.htm
|  version= 1.0.23"      &:20250503 C.Reyes   syntax clean-up, MLA jargon: Editor_revAH.htm
|  version= 1.0.23"      &:20250503 C.Reyes   syntax clean-up, MLA jargon: Editor_revAM.htm
|  version= 1.0.23"      &:20250503 C.Reyes   refactoring cross-platform browser: Editor_revAM.htm
-------------------------------------------------------------
-->
<head>
<title> Editor v1.0.23</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<style type="text/css" media="screen"> 
@media print {
   body * {
      visibility: hidden;
      margin:0; padding:0;
	  font-size: 0.875rem; 
   }
   .onlyPrint {font-size:1rem;display: block;}
   #wrapper {
      margin:0 !important;
      padding:1.2081rem 0 0 0 !important;
	  display: inline !important;
	  display : block;
   }
   #header, #footer, .btn { display:none; }
   .col-sm-1, .col-sm-2, .col-sm-3, 
   .col-sm-4, .col-sm-5, .col-sm-6,
 html,body{
    padding:0; margin:0;
    height:100%;min-height:100%;
	/*white-space: nowrap; /*Prevents Wrapping*/
  }}
  #special {color: red;}
  /*#timestamppos{position:relative; float: left; font-size:10px;}*/
  /*#timestamppos{position:relative; float: left; font-size:0.625rem;}*/
  #timestamppos{ position:relative; float: left; font-size:0.625rem;display:none;}
</style><script>
var d = new Date(Date.now() + 1000);
var day = d.getDate();
var month = d.getMonth() + 1; // Months are 0-indexed
var year = d.getFullYear();
var hour = d.getHours();
var minutes = d.getMinutes();
var secconds = d.getSeconds()
var formattedDate = padZero(month) + "-" + padZero(day) + "-" + year + "-" + padZero(hour)  + "-" + padZero(minutes) + "-" + padZero(secconds);
document.title = "Log_" + formattedDate;
//add leading zero to date and time
//https://www.altcademy.com/blog/how-to-get-current-time-in-javascript/
function padZero(number) {
  return number < 10 ? '0' + number : number.toString();
}
// Print section only
function printDiv(divName){
var printContents = document.getElementById(divName).innerHTML;
var originalContents = document.body.innerHTML;
document.body.innerHTML = printContents;
	window.print();
	document.body.innerHTML = originalContents;}
</script></head><body>
    <div id="toolbar">
        <button onclick="document.execCommand('bold', false, '')">Bold</button>
        <button onclick="document.execCommand('italic', false, '')">Italic</button>
        <button onclick="document.execCommand('underline', false, '')">Underline</button>
		<button id="numeric-list">Numeric List</button>
		<!--<button id="alpha-list">Alpha List</button>
		<button id="roman-list">Roman List</button>-->
		<button onclick="saveContent()">Save</button>
        <button onclick="loadContent()">Load</button>
		<button id="timestampBtn" onclick="newContent()">New Entry</button>
		<button id="templateBtn" onclick="newContent()">New Job</button>
		<button onclick="printDiv('printMe')">Print Document</button><br>
		<p id="special"><b><sup>Best opened in MSEDGE -or- Google Chrome</sup></b></p><p>
		 "<b>CTRL + S</b>" <u>SaveAs</u> your file with specific name (e.g: Workorder,Project,Form, topic, etc...)<br>"<b>CTRL + Z</b>" to UNDO edit <br><b>"HIGHLIGHT":</b> <u><b>dblclick</b></u> -or- select to highlight text; <u><b>click</b></u> to unhiglight</p>
    </div>
<div id="printMe"><div class="onlyPrint" id="wrapper"><div id="timestamppos"><script>
var today = new Date();
document.write("<br>");document.write('REVISION CHANGE: ');
document.write(today.toLocaleString());document.write("\n");
document.write('');
</script></div><br><hr>
<div class="printable" contenteditable="true" id="editor">&nbsp;<br>-</div>
<script>
 const editor = document.getElementById('editor');
 const timestampBtn = document.getElementById('timestampBtn');
 const templateBtn = document.getElementById('templateBtn');
 const addBulletButton = document.getElementById('addBullet');
 const listContainer = document.getElementById('editor');
 var timestamp = d.toLocaleString();
 var text = editor.innerHTML; 
// timestamp entry
  timestampBtn.addEventListener('click', () => {
    editor.innerHTML += '<br>'+ "##############&nbsp;&nbsp;&nbsp;NEW ENTRY&nbsp;&nbsp;&nbsp;##############" + '<br>';
	editor.innerHTML += "\n[ " +  timestamp + " ]\n" + '<br>';
	editor.innerHTML +='<br>-';
  });
// Job Template  
  templateBtn.addEventListener('click', () => {
    editor.innerHTML +='<br>'+ "@@@@@@@@@@@@@@&nbsp;&nbsp;&nbsp;JOB ENTRY&nbsp;&nbsp;&nbsp;@@@@@@@@@@@@@@" + '<br>';
	editor.innerHTML +='<br>';
	editor.innerHTML +="Workorder/Project:&nbsp;<br>";
	editor.innerHTML +="Product Name:&nbsp;<br>";
	editor.innerHTML +="Part Number:&nbsp;<br>";
	editor.innerHTML +="Serial Number:&nbsp;<br>";
	editor.innerHTML +="Comment:&nbsp;<br>";
	editor.innerHTML +="OP:&nbsp;<br>";
	editor.innerHTML +='<br>-';
  });
// Highlight selected text:
document.addEventListener('mousedown', function(event) {
  const selection = window.getSelection();
  const selectedText = selection.toString().trim();
  if (selectedText) {
    const range = selection.getRangeAt(0);
    const span = document.createElement('span');
    span.style.backgroundColor = 'yellow';
    span.appendChild(range.extractContents());
    range.insertNode(span);
    selection.removeAllRanges();
//unhighlight text
    span.addEventListener('click', function(event) {
      const span = event.target;
      const text = span.textContent;
      const range = document.createRange();
      range.setStartBefore(span);
      range.setEndAfter(span);
      range.deleteContents();
      range.insertNode(document.createTextNode(text));
    });
  }
});
// Add Bullets
function createList(type) {
  const list = document.createElement('ol');
  list.setAttribute('type', type);
  list.setAttribute('contenteditable', true);
  const item1 = document.createElement('li');
  const item2 = document.createElement('li');
  item1.textContent = 'Item 1';
  item2.textContent = 'Item 2';
  list.appendChild(item1);
  list.appendChild(item2);
  listContainer.appendChild(list);
}
// Create different list styles on button clicks (example)
document.getElementById('numeric-list').addEventListener('click', () => createList('1'));
document.getElementById('alpha-list').addEventListener('click', () => createList('a'));
document.getElementById('roman-list').addEventListener('click', () => createList('I'));
function newContent() {
          localStorage.setItem('editorContent', editor.innerHTML);}
function saveContent() {
          localStorage.setItem('editorContent', editor.innerHTML);
          alert('Content saved!');}
function loadContent() {
   const content = localStorage.getItem('editorContent');
         if (content) { editor.innerHTML = content;} else {
           alert('No content found!');}}
</script></div></div></body></html>
